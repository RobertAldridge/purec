
// build.gradle

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
      classpath 'com.android.tools.build:gradle:7.0.3'
    }
}

repositories {
    google()
    mavenCentral()
}

apply plugin: 'com.android.application'

android {
  compileSdk 31

  ndkVersion '27.2.12479018'

  namespace 'org.khronos.openxr.helloxr'

  defaultConfig {
    applicationId 'com.oculus.sdk.helloxr'

    minSdk 31
    targetSdk 31

    versionCode 1
    versionName '1.0'

    externalNativeBuild {
      ndk {
        abiFilters 'arm64-v8a'
      }
      ndkBuild {
        abiFilters 'arm64-v8a'
      }
      cmake {
         targets 'helloxr'
         version '3.10.2'
      }
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      res.srcDir '../../resources'
      assets.srcDir '../../assets'
    }

    Vulkan {
            res.srcDir '../../resources/vulkan'
        }
  }

  buildTypes {
    debug {
      debuggable true
    }

    release {
      debuggable false
    }
  }

  externalNativeBuild {
    cmake {
      path file('../../../CMakeLists.txt')
    }
  }

   flavorDimensions 'api'

    productFlavors {
        Vulkan {
            dimension 'api'
            applicationIdSuffix '.vulkan'

            resValue "string", "app_name", "Hello XR (Vulkan)"
        }
    }

  buildFeatures {
  }
}

dependencies {
}

def keystorePropertiesFilename = System.getenv("KEYSTORE_PROPERTIES")
if (keystorePropertiesFilename) {
    def keystorePropertiesFile = file("${keystorePropertiesFilename}")
    if (keystorePropertiesFile.exists()) {
        println("Signing release artifacts for helloxr")
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        android.signingConfigs {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile file("${project.repoRoot}/" + keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
        android.buildTypes.release.signingConfig android.signingConfigs.release
    }
}
